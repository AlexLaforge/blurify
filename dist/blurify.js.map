{"version":3,"file":null,"sources":["../src/index.js"],"sourcesContent":["export default class blurify {\n    constructor(options) {\n        this.blur = options.blur || 6;\n\n        if (options.selector) {\n            this.selector = options.selector;\n            this.$els = [...document.querySelectorAll(this.selector)];\n            preloadImages(this.$els).done(images => {\n                images.map(image => {\n                    console.log(this.getDataURL(image).slice(0, 100));\n                    // image.src = this.getDataURL(image);\n                    console.log(image);\n                });\n            });\n            // this.$els.map(el => {\n            //     // console.log('before', el);\n            //     // el.src = this.getDataURL(el);\n            //     console.log(this.getDataURL(el).slice(0, 30));\n            // });\n        } else {\n            options.image.src = this.getDataURL(options.image);\n        }\n    }\n\n    blurify(canvas, blur) {\n        let ctx = canvas.getContext('2d');\n        ctx.globalAlpha = 0.5;\n        for (let y = -blur; y <= blur; y += 2) {\n            for (let x = -blur; x <= blur; x += 2) {\n                ctx.drawImage(canvas, x, y);\n                if (x >= 0 && y >= 0) ctx.drawImage(canvas, -(x - 1), -(y - 1));\n            }\n        }\n        ctx.globalAlpha = 1;\n    }\n\n    getDataURL(image) {\n        let canvas = document.createElement('canvas'),\n            ctx = canvas.getContext('2d');\n\n        canvas.width = image.width;\n        canvas.height = image.height;\n        ctx.drawImage(image, 0, 0);\n        this.blurify(canvas, this.blur);\n        return canvas.toDataURL(`image/jpeg`);\n    }\n}\n\nfunction preloadImages(images) {\n    let newimages = [],\n        loadedImagesCount = 0,\n        postAction = function () {};\n\n    images = (typeof images != 'object') ? [images] : images;\n\n    function imageLoadPost() {\n        loadedImagesCount++;\n        if (loadedImagesCount == images.length) postAction(newimages);\n    }\n\n    images.map((image, i) => {\n        newimages[i] = new Image();\n        newimages[i].src = image.src;\n        newimages[i].onload = function () {\n            imageLoadPost();\n        };\n        newimages[i].onerror = function () {\n            imageLoadPost();\n        };\n    });\n\n    return {\n        done(callback) {\n            postAction = callback || postAction;\n        },\n    };\n}\n"],"names":["blurify","options","blur","selector","$els","document","querySelectorAll","preloadImages","done","images","map","console","log","getDataURL","image","slice","src","canvas","ctx","getContext","globalAlpha","y","x","drawImage","createElement","width","height","toDataURL","newimages","loadedImagesCount","postAction","imageLoadPost","length","i","Image","onload","onerror","callback"],"mappings":"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"}